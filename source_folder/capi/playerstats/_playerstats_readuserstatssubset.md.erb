### ReadUserStatsSubset

```objective_c
NSArray *userStats = @[ @"LIVES" ];
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> playerStatisticsService] readUserStatsSubset:userStats
            completionBlock:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```cpp
std::vector<std::string> userStats;
userStats.push_back("LIVES");

<%= data.branding.codePrefix %>->getPlayerStatisticsService()->readUserStatsSubset(userStats, this);
```

```csharp
string[] userStats = { "LIVES" };
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.PlayerStatisticsService.ReadUserStatsSubset(userStats, successCallback, failureCallback);
```

```java
String[] userStats = { "LIVES" };
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getPlayerStatisticsService().readUserStatsSubset(userStats, this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```

```javascript
var userStats = [ "LIVES" ];

<%= data.branding.codePrefix %>.playerStatistics.readUserStatsSubset(userStats, result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```

```cfscript
var userStats = [ "LIVES" ];
var playerStatisticsProxy = bridge.getPlayerStatisticsServiceProxy();

var postResult = playerStatisticsProxy.readUserStatsSubset(userStats);
if (postResult.status == 200) {
    // Success!
}
```
```r
{
	"service": "playerStatistics",
	"operation": "READ_SUBSET",
	"data": {
		"statistics": ["LIVES"]
	}
}
```

<%= partial "partials/jsonBtn" %>

```json-doc
{
    "status": 200,
    "data": {
        "statistics": {
            "LIVES": 7
        }
    }
}
```

Reads a subset of user statistics.

<%= partial(:"partials/servop", :locals => { :service_name => "playerStatistics", :operation_name => "READ_SUBSET" }) %>

#### Method Parameters
Parameter | Description
--------- | -----------
userStats | A collection containing the statistics to read


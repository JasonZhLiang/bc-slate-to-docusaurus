### GetRegionsForLobbies

```cfscript
var lobbyTypes = [ "2v2", "4v4" ];
var lobbyProxy = bridge.getLobbyServiceProxy();

var postResult = lobbyProxy.getRegionsForLobbies(lobbyTypes);
if (postResult.status == 200) {
    // Success!
}
```
```cpp
std::vector<std::string> lobbyTypes;
lobbyTypes.push_back("2v2");
lobbyTypes.push_back("4v4");
<%= data.branding.codePrefix %>->getLobbyService()->getRegionsForLobbies(lobbyTypes, this);
```
```csharp
string[] lobbyTypes = { "2v2", "4v4" };
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.LobbyService.GetRegionsForLobbies(lobbyTypes, successCallback, failureCallback);
```
```java
String[] lobbyTypes = { "2v2", "4v4" };
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getLobbyService().getRegionsForLobbies(lobbyTypes, this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```
```javascript
var lobbyTypes = [ "2v2", "4v4" ];

<%= data.branding.codePrefix %>.lobby.getRegionsForLobbies(lobbyTypes, result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```
```objective_c
NSArray *lobbyTypes = @[ @"2v2", @"4v4" ];
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> lobbyService] getRegionsForLobbies:lobbyTypes
            completionBlock:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```r
{
	"service": "lobby",
	"operation": "GET_REGIONS_FOR_LOBBIES",
	"data": {
		"lobbyTypes": [
			"2v2",
			"4v4"
		]
	}
}
```
<%= partial "partials/jsonBtn" %>

```json-doc
{
  "data": {
    "lobbyTypeRegions": {
      "Relay_lobbyT_v2": [
        "ca-central-1"
      ]
    },
    "regionPingData": {
      "ca-central-1": {
        "type": "PING",
        "target": "dynamodb.ca-central-1.amazonaws.com"
      }
    }
  },
  "status": 200
}
```
<%= partial(:"partials/versionTag", :locals => {
  :version => "4.1.0",
  :newText => "",
  :comingText => ""
}) %>

Retrieves the region settings for each of the given lobby types.

<%= partial(:"partials/servop", :locals => { :service_name => "lobby", :operation_name => "GET_REGIONS_FOR_LOBBIES" }) %>

#### Method Parameters
Parameter | Description
--------- | -----------
lobbyTypes | Types of lobby being queried. 


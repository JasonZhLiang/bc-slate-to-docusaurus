### GetMessageBoxes

```r
{
	"service": "messaging",
	"operation": "GET_MESSAGE_BOXES",
	"data": {}
}
```

```objective_c
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> messagingService] getMessageBoxes:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```cpp
<%= data.branding.codePrefix %>->getMessagingService()->getMessageBoxes(this);
```

```csharp
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.MessagingService.GetMessageBoxes(successCallback, failureCallback);
```

```java
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getMessagingService().getMessageBoxes(this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```

```javascript

<%= data.branding.codePrefix %>.messaging.getMessageBoxes(result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```

```cfscript
var messagingProxy = bridge.getMessagingServiceProxy();

var postResult = messagingProxy.getMessageBoxes();
if (postResult.status == 200) {
    // Success!
}
```


<%= partial "partials/jsonBtn" %>

```json-doc
{
    "status": 200,
    "data": {
        "items": [
            "inbox",
            "sent"
        ]
    }
}
```

Returns the list of messageboxes for this user. <%= data.branding.productName %> currently only supports the default "inbox" and "sent" messageboxes.

<%= partial(:"partials/servop", :locals => { :service_name => "messaging", :operation_name => "GET_MESSAGE_BOXES" }) %>

#### Method Parameters

None.

#### Status Codes
| Code | Name | Description |
| ----- | ----------------------- | ----------------------------------- |
| 40601 | FEATURE_NOT_ENABLED | Messaging feature is not enabled for app. |



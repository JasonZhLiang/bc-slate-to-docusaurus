### SysReadTournamentTemplate

```r
{
	"service": "tournament",
	"operation": "SYS_READ_TOURNAMENT_TEMPLATE",
	"data": {
    "tournamentCode": "uniqueTournamentCode",
    "version": -1
  }
}
```
```cfscript
var tournamentCode = "uniqueTournamentCode";
var version = -1;
var tournamentProxy = bridge.getTournamentServiceProxy();

var postResult = tournamentProxy.sysReadTournamentTemplate(tournamentCode, version);
if (postResult.status == 200) {
    // Success!
}
```
```cpp
// Cloud Code only. To view example, switch to the Cloud Code tab
```

```csharp
// Cloud Code only. To view example, switch to the Cloud Code tab
```

```java
// Cloud Code only. To view example, switch to the Cloud Code tab
```

```javascript
// Cloud Code only. To view example, switch to the Cloud Code tab
```

```objective_c
// Cloud Code only. To view example, switch to the Cloud Code tab
```

<%= partial "partials/jsonBtn" %>

```json-doc
{
  "data": {
    "gameId": "23782",
    "tournamentCode": "uniqueTournamentCode",
    "version": 1,
    "description": {
      "name": {
        "en": "tFree"
      },
      "desc": {
        "en": "Free tournament. Pays out for rankings: 1st, 2nd and top 10%. Push notifications for start and complete."
      }
    },
    "notifications": {
      "startingSoon": {
        "enabled": false,
        "pushId": null,
        "mail": {}
      },
      "start": {
        "enabled": true,
        "pushId": 1,
        "mail": {}
      },
      "scorePassed": {
        "enabled": false,
        "pushId": null,
        "mail": {}
      },
      "endingSoon": {
        "enabled": false,
        "pushId": null,
        "mail": {}
      },
      "complete": {
        "enabled": true,
        "pushId": 1,
        "mail": {}
      }
    },
    "calcScript": "",
    "postScript": "",
    "customJson": {},
    "payoutRules": [
      {
        "rank": {
          "rankAbs": 1
        },
        "reward": {
          "experiencePoints": 10,
          "currency": {
            "coins": 100
          }
        }
      },
      {
        "rank": {
          "rankAbs": 2
        },
        "reward": {
          "experiencePoints": 5,
          "currency": {
            "coins": 50
          }
        }
      },
      {
        "rank": {
          "rankToPercent": 10
        },
        "reward": {
          "experiencePoints": 1,
          "currency": {
            "coins": 5
          }
        }
      }
    ],
    "entryFee": {},
    "createdAt": 1632511327924,
    "updatedAt": 1632511327924
  },
  "status": 200
}
```

<%= partial(:"partials/versionTag", :locals => {
  :version => "4.9.0",
  :newText => "",
  :comingText => ""
}) %>

Read a specific tournament template by tournament code and version.

<%= partial(:"partials/servop", :locals => { :service_name => "tournament", :operation_name => "SYS_READ_TOURNAMENT_TEMPLATE" }) %>

#### Method Parameters
Parameter | Description
--------- | -----------
tournamentCode | The tournament code uniquely identifying the template to return
version | Version number of tournament template to return, use -1 to return current default version

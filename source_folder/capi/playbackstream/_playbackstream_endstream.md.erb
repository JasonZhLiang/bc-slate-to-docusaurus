### EndStream

```r
{
	"service": "playbackStream",
	"operation": "END_STREAM",
	"data": {
		"playbackStreamId": "stream"
	}
}
```

```objective_c
NSString *playbackStreamId = @"stream";
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> playbackStreamService] endStream:playbackStreamId
            completionBlock:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```cpp
const char *playbackStreamId = "stream";

<%= data.branding.codePrefix %>->getPlaybackStreamService()->endStream(playbackStreamId, this);
```

```csharp
string playbackStreamId = "stream";
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.PlaybackStreamService.EndStream(playbackStreamId, successCallback, failureCallback);
```

```java
String playbackStreamId = "stream";
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getPlaybackStreamService().endStream(playbackStreamId, this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```

```javascript
var playbackStreamId = "stream";

<%= data.branding.codePrefix %>.playbackStream.endStream(playbackStreamId, result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```

```cfscript
var playbackStreamId = "stream";
var playbackStreamProxy = bridge.getPlaybackStreamServiceProxy();

var postResult = playbackStreamProxy.endStream(playbackStreamId);
if (postResult.status == 200) {
    // Success!
}
```

<%= partial "partials/jsonBtn" %>

```json-doc
{
    "status" : 200,
    "data" : null
}
```

Ends a stream.

<%= partial(:"partials/servop", :locals => { :service_name => "playbackStream", :operation_name => "END_STREAM" }) %>
#### Method Parameters
Parameter | Description
--------- | -----------
playbackStreamId | Identifies the stream to end

### DeleteEntity

```r
{
	"service": "entity",
	"operation": "DELETE",
	"data": {
		"entityId": "someEntityId",
		"version": -1
	}
}
```

```objective_c
NSString *entityId = @"someEntityId";
int version = -1;
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> entityService] deleteEntity:entityId
                    version:version
            completionBlock:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```cpp
const char *entityId = "someEntityId";
int version = -1;
<%= data.branding.codePrefix %>->getEntityService()->deleteEntity(entityId, version, this);
```

```csharp
string entityId = "someEntityId";
int version = -1;
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.EntityService.DeleteEntity(entityId, version, successCallback, failureCallback);
```

```java
String entityId = "someEntityId";
int version = -1;
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getEntityService().deleteEntity(entityId, version, this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```

```javascript
var entityId = "someEntityId";
var version = -1;

<%= data.branding.codePrefix %>.entity.deleteEntity(entityId, version, result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```

```cfscript
var entityId = "someEntityId";
var version = -1;
var entityProxy = bridge.getEntityServiceProxy();

var postResult = entityProxy.deleteEntity(entityId, version);
if (postResult.status == 200) {
    // Success!
}
```


<%= partial "partials/jsonBtn" %>

```json-doc
{
    "status":200,
    "data":null
}
```

Method deletes the given entity on the server.

This method is affected by versioning. See the <a href="#" onclick='window.navigateToTarget("#appendix-version");'>versioning documentation</a> for more information.

<%= partial(:"partials/servop", :locals => { :service_name => "entity", :operation_name => "DELETE" }) %>

#### Method Parameters
Parameter | Description
--------- | -----------
entityId | The id of the entity to delete
version | The version of the entity to delete. Use -1 to indicate the newest version

#### Status Codes
Code | Name | Description
---- | ---- | -----------
40344 | ENTITY_VERSION_MISMATCH | The version parameter does not match the current version on the server


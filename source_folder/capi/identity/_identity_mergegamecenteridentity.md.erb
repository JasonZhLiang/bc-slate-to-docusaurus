### MergeGameCenterIdentity

```csharp
string gameCenterId = "someId";

<%= data.branding.codePrefix %>.IdentityService.MergeGameCenterIdentity(
    gameCenterId,
    SuccessCallback, FailureCallback);
```

```cpp
const char * gameCenterId = "someId";

<%= data.branding.codePrefix %>->getIdentityService()->mergeGameCenterIdentity(
    gameCenterId, this);
```

```objective_c
- (void)mergeGameCenterIdentity:(NSString *)gameCenterId
                completionBlock:(BCCompletionBlock)cb
           errorCompletionBlock:(BCErrorCompletionBlock)ecb
                       cbObject:(BCCallbackObject)cbObject;
```

```java
public void mergeGameCenterIdentity(String gameCenterId, IServerCallback callback)
```

```javascript
<%= data.branding.codePrefix %>.identity.mergeGameCenterIdentity = function(gameCenterId, callback)
```

```cfscript
// N/A
```

<%= partial "partials/jsonBtn" %>

```json-doc
{  
   "data":{  
      "profileId":"f94f7e2d-3cdd-4fd6-9c28-392f7875e9df"
   },
   "status":200
}
```

Merge the profile associated with the specified Game Center identity with the current profile.

NOTE: If using the <%= data.branding.codeWrapper %>, once the merge is complete you should call <a href="#" onclick='window.navigateToTarget("#wrapper-setstoredprofileid");'><code>SetStoredProfileId</code></a> in the <%= data.branding.codeWrapper %> with the profileId returned in the Merge call.

<%= partial(:"partials/servop", :locals => { :service_name => "identity", :operation_name => "MERGE" }) %>

#### Method Parameters
Parameter | Description
--------- | -----------
gameCenterId | The player's game center id  (use the playerID property from the local GKPlayer object)

#### Status Codes
Code | Name | Description
---- | ---- | -----------
40211 | DUPLICATE_IDENTITY_TYPE | Returned when trying to attach an identity type that already exists for that profile. For instance you can have only one Game Center identity for a profile.


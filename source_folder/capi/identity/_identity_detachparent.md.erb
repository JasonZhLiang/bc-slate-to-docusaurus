### DetachParent
```r
{
	"service": "identity",
	"operation": "DETACH_PARENT",
	"data": {}
}
```

<%= partial(:"partials/versionTag", :locals => {
  :version => "3.2.0",
  :newText => "",
  :comingText => ""
}) %>

```csharp
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.IdentityService.DetachParent(successCallback, failureCallback);
```

```cpp
<%= data.branding.codePrefix %>->getIdentityService()->detachParent(this);
```

```objective_c
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> identityService] detachParent:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```java
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getIdentityService().detachParent(this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```

```javascript

<%= data.branding.codePrefix %>.identity.detachParent(result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```

```cfscript
var identityProxy = bridge.getIdentityServiceProxy();

var postResult = identityProxy.detachParent();
if (postResult.status == 200) {
    // Success!
}
```

<%= partial "partials/jsonBtn" %>

```json-doc
{
    "status" : 200,
    "data" : {
        "profileId" : "1234-1234-1234-1234"
    }
}
```

Detaches the parent identity from the current profile.

<%= partial(:"partials/servop", :locals => { :service_name => "identity", :operation_name => "DETACH_PARENT" }) %>


### RefreshIdentity

```r
{
	"service": "identity",
	"operation": "REFRESH_IDENTITY",
	"data": {
		"externalId": "846557642688",
		"authenticationToken": "ghbiuhgvbiuhbiunbuibgin",
		"authenticationType": "Facebook"
	}
}
```


```csharp
string externalId = "846557642688";
string authenticationToken = "ghbiuhgvbiuhbiunbuibgin";
string authenticationType = "Facebook";
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.IdentityService.RefreshIdentity(externalId, authenticationToken, authenticationType, successCallback, failureCallback);
```

```cpp
const char *externalId = "846557642688";
const char *authenticationToken = "ghbiuhgvbiuhbiunbuibgin";
const char *authenticationType = "Facebook";
<%= data.branding.codePrefix %>->getIdentityService()->refreshIdentity(externalId, authenticationToken, authenticationType, this);
```

```objective_c
NSString *externalId = @"846557642688";
NSString *authenticationToken = @"ghbiuhgvbiuhbiunbuibgin";
NSString *authenticationType = @"Facebook";
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> identityService] refreshIdentity:externalId
        authenticationToken:authenticationToken
         authenticationType:authenticationType
            completionBlock:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```java
String externalId = "846557642688";
String authenticationToken = "ghbiuhgvbiuhbiunbuibgin";
String authenticationType = "Facebook";
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getIdentityService().refreshIdentity(externalId, authenticationToken, authenticationType, this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```

```javascript
var externalId = "846557642688";
var authenticationToken = "ghbiuhgvbiuhbiunbuibgin";
var authenticationType = "Facebook";

<%= data.branding.codePrefix %>.identity.refreshIdentity(externalId, authenticationToken, authenticationType, result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```

```cfscript
var externalId = "846557642688";
var authenticationToken = "ghbiuhgvbiuhbiunbuibgin";
var authenticationType = "Facebook";
var identityProxy = bridge.getIdentityServiceProxy();

var postResult = identityProxy.refreshIdentity(externalId, authenticationToken, authenticationType);
if (postResult.status == 200) {
    // Success!
}
```

<%= partial "partials/jsonBtn" %>

```json-doc
{
    "status": 200,
    "data": {
        "externalId": "758945465505",
        "authenticationType": "Facebook"
    }
}
```

Refreshes an identity for this player

<%= partial(:"partials/servop", :locals => { :service_name => "identity", :operation_name => "REFRESH_IDENTITY" }) %>
#### Method Parameters
Parameter | Description
--------- | -----------
externalId | User ID
authenticationToken | Password or client side token
authenticationType | Type of authentication

### ChangeEmailIdentity

```r
{
	"service": "identity",
	"operation": "CHANGE_EMAIL_IDENTITY",
	"data": {
		"oldEmailAddress": "oldemail@email.com",
		"authenticationToken": "password",
		"newEmailAddress": "newemail@email.com",
		"updateContactEmail": true
	}
}
```

<%= partial(:"partials/versionTag", :locals => {
  :version => "3.7.0",
  :newText => "",
  :comingText => ""
}) %>

```csharp
string oldEmailAddress = "oldemail@email.com";
string authenticationToken = "password";
string newEmailAddress = "newemail@email.com";
bool updateContactEmail = true;
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.IdentityService.ChangeEmailIdentity(oldEmailAddress, authenticationToken, newEmailAddress, updateContactEmail, successCallback, failureCallback);
```

```cpp
const char *oldEmailAddress = "oldemail@email.com";
const char *authenticationToken = "password";
const char *newEmailAddress = "newemail@email.com";
bool updateContactEmail = true;
<%= data.branding.codePrefix %>->getIdentityService()->changeEmailIdentity(oldEmailAddress, authenticationToken, newEmailAddress, updateContactEmail, this);
```

```objective_c
NSString *oldEmailAddress = @"oldemail@email.com";
NSString *authenticationToken = @"password";
NSString *newEmailAddress = @"newemail@email.com";
bool updateContactEmail = true;
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> identityService] changeEmailIdentity:oldEmailAddress
        authenticationToken:authenticationToken
            newEmailAddress:newEmailAddress
         updateContactEmail:updateContactEmail
            completionBlock:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```java
String oldEmailAddress = "oldemail@email.com";
String authenticationToken = "password";
String newEmailAddress = "newemail@email.com";
boolean updateContactEmail = true;
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getIdentityService().changeEmailIdentity(oldEmailAddress, authenticationToken, newEmailAddress, updateContactEmail, this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```

```javascript
var oldEmailAddress = "oldemail@email.com";
var authenticationToken = "password";
var newEmailAddress = "newemail@email.com";
var updateContactEmail = true;

<%= data.branding.codePrefix %>.identity.changeEmailIdentity(oldEmailAddress, authenticationToken, newEmailAddress, updateContactEmail, result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```

```cfscript
var oldEmailAddress = "oldemail@email.com";
var authenticationToken = "password";
var newEmailAddress = "newemail@email.com";
var updateContactEmail = true;
var identityProxy = bridge.getIdentityServiceProxy();

var postResult = identityProxy.changeEmailIdentity(oldEmailAddress, authenticationToken, newEmailAddress, updateContactEmail);
if (postResult.status == 200) {
    // Success!
}
```

<%= partial "partials/jsonBtn" %>

```json-doc
{
    "status": 200,
    "data": {
    }
}
```

Changes email address in email identity for this player

<%= partial(:"partials/servop", :locals => { :service_name => "identity", :operation_name => "CHANGE_EMAIL_IDENTITY" }) %>
#### Method Parameters
Parameter | Description
--------- | -----------
oldEmailAddress | Old email address
password | Password
newEmailAddress | New email address
updateContactEmail | Whether to update contact email in profile


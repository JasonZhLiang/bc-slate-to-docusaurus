### DetachPeer

```r
{
	"service": "identity",
	"operation": "DETACH_PEER",
	"data": {
		"peer": "test"
	}
}
```

<%= partial(:"partials/versionTag", :locals => {
  :version => "3.2.0",
  :newText => "",
  :comingText => ""
}) %>

```csharp
string peer = "test";
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.IdentityService.DetachPeer(peer, successCallback, failureCallback);
```

```cpp
const char *peer = "test";
<%= data.branding.codePrefix %>->getIdentityService()->detachPeer(peer, this);
```

```objective_c
NSString *peer = @"test";
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> identityService] detachPeer:peer
            completionBlock:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```java
String peer = "test";
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getIdentityService().detachPeer(peer, this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```

```javascript
var peer = "test";

<%= data.branding.codePrefix %>.identity.detachPeer(peer, result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```

```cfscript
var peer = "test";
var identityProxy = bridge.getIdentityServiceProxy();

var postResult = identityProxy.detachPeer(peer);
if (postResult.status == 200) {
    // Success!
}
```

<%= partial "partials/jsonBtn" %>

```json-doc
{
    "status" : 200,
    "data" : {
        "profileId" : "1234-1234-1234-1234"
    }
}
```

Detaches a peer identity from the current profile.

<%= partial(:"partials/servop", :locals => { :service_name => "identity", :operation_name => "DETACH_PEER" }) %>
#### Method Parameters
Parameter | Description
--------- | -----------
peer | Identifies the peer of the profile you wish to detach


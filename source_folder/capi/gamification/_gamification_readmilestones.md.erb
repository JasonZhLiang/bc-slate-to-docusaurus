### ReadMilestones

```r
{
	"service": "gamification",
	"operation": "READ_MILESTONES",
	"data": {
		"includeMetaData": false
	}
}
```

```objective_c
bool includeMetaData = false;
BCCompletionBlock successBlock;      // define callback
BCErrorCompletionBlock failureBlock; // define callback

[[<%= data.branding.codePrefix %> gamificationService] readMilestones:includeMetaData
            completionBlock:successBlock
       errorCompletionBlock:failureBlock
                   cbObject:nil];
```

```cpp
bool includeMetaData = false;
<%= data.branding.codePrefix %>->getGamificationService()->readMilestones(includeMetaData, this);
```

```csharp
bool includeMetaData = false;
SuccessCallback successCallback = (response, cbObject) =>
{
    Debug.Log(string.Format("Success | {0}", response));
};
FailureCallback failureCallback = (status, code, error, cbObject) =>
{
    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));
};

<%= data.branding.codePrefix %>.GamificationService.ReadMilestones(includeMetaData, successCallback, failureCallback);
```

```java
boolean includeMetaData = false;
this; // implements IServerCallback

<%= data.branding.codePrefix %>.getGamificationService().readMilestones(includeMetaData, this);

public void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)
{
    System.out.print(String.format("Success | %s", jsonData.toString()));
}
public void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)
{
    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));
}
```

```javascript
var includeMetaData = false;

<%= data.branding.codePrefix %>.gamification.readMilestones(includeMetaData, result =>
{
	var status = result.status;
	console.log(status + " : " + JSON.stringify(result, null, 2));
});
```

```cfscript
var includeMetaData = false;
var gamificationProxy = bridge.getGamificationServiceProxy();

var postResult = gamificationProxy.readMilestones(includeMetaData);
if (postResult.status == 200) {
    // Success!
}
```

<%= partial "partials/jsonBtn" %>

```json-doc
{
    "data": {
     "milestones": [
      {
       "gameId": "11549",
       "questId": null,
       "thresholds": {
        "playerStatistics": {
         "experienceLevel": 1
        }
       },
       "extraData": null,
       "unlockThresholds": {
        "playerStatistics": {
         "statistics": {
          "Levels_Completed": 5
         }
        }
       },
       "description": "Awarded when you get to player level 1",
       "id": "3",
       "title": "Level 1 milestone",
       "category": "Level_Milestones",
       "rewards": {
        "currency": {
         "Gems": 10
        }
       },
       "status": "IN_PROGRESS"
      }
     ]
    },
    "status": 200
}
```

Method retrieves all milestones defined for the game.

<%= partial(:"partials/servop", :locals => { :service_name => "gamification", :operation_name => "READ_MILESTONES" }) %>
#### Method Parameters
Parameter | Description
--------- | -----------
includeMetaData | Whether to return meta data as well

